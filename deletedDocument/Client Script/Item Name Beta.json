{"name":"c12e4f954f","creation":"2024-11-20 08:03:18.128677","modified":"2024-11-20 08:03:18.128677","modified_by":"deploymentmaster@lmnas.com","owner":"deploymentmaster@lmnas.com","docstatus":0,"idx":0,"deleted_name":"Item Name Beta","deleted_doctype":"Client Script","restored":0,"new_name":null,"data":"{\n \"creation\": \"2024-11-20 08:03:10.196891\",\n \"docstatus\": 0,\n \"doctype\": \"Client Script\",\n \"dt\": \"Item\",\n \"enabled\": 1,\n \"idx\": 0,\n \"modified\": \"2024-11-20 08:03:10.196891\",\n \"modified_by\": \"deploymentmaster@lmnas.com\",\n \"module\": null,\n \"name\": \"Item Name Beta\",\n \"owner\": \"deploymentmaster@lmnas.com\",\n \"script\": \"// Change References\\n// Formation of Enclosure Item Name:(Issue# : ISS-2024-00004)\\n//Formation of DTTHZ2N Item code Formation: (Issue# : ISS-2024-00013)\\n\\ncur_frm.cscript.custom_validate = function (doc) {\\n    // clear item_code (name is from item_code)\\n    function fnAddAttributeToItemName(iDoc, iAttribute) {\\n      // Get the current item_name\\n      let lItemName = iDoc.item_name;\\n  \\n      // Find the index of the attribute in the attributes array\\n      let lIndex = iDoc.attributes.findIndex(\\n        (element) => element.attribute == iAttribute\\n      );\\n  \\n      // Handle specific attributes\\n      switch (iAttribute) {\\n        case \\\"HV 1 (kV)\\\":\\n        case \\\"HV 2 (kV)\\\":\\n        case \\\"HV (kV)\\\":\\n          // If the attribute value is not present, set it to 0\\n          if (!iDoc.attributes[lIndex].attribute_value) {\\n            iDoc.attributes[lIndex].attribute_value = 0;\\n          }\\n          break;\\n      }\\n      // fill the item attribute only if it has a value\\n      if (\\n        lIndex >= 0 &&\\n        iDoc.attributes[lIndex]?.attribute_value !== undefined &&\\n        iDoc.attributes[lIndex].attribute_value !== 0\\n      ) {\\n        lItemName =\\n          lItemName +\\n          \\\"/\\\" +\\n          iDoc.attributes[lIndex].attribute_value.toString().replace(/\\\\./g, \\\",\\\");\\n      }\\n  \\n      return lItemName;\\n    }\\n    // Only for new documents\\n    if (cur_frm.is_new() && !cur_frm.doc.has_variants) {\\n      // var lItemCode  = '';\\n      // // Split the item code using '-' as a separator and \\n      // store the resulting array in attribute_values\\n      // const attribute_values = doc.item_code.split('-');\\n  \\n      // first 2 characters based on item_group\\n      switch (doc.item_group) {\\n        case \\\"DTTHZ2N\\\":\\n        case \\\"Reduzierte Verluste\\\":\\n        case \\\"Umschaltbar\\\":\\n        case \\\"Umschaltbar ECO+\\\":\\n          doc.item_name = doc.variant_of;\\n          // Find the index of the \\\"Power (kVA)\\\" attribute in the attributes array\\n          let lIndex = doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Power (kVA)\\\"\\n          );\\n          // Check if the \\\"Power (kVA)\\\" attribute exists and has a value\\n          if (lIndex >= 0) {\\n            //check if attribute value is filled\\n            if (doc.attributes[lIndex].attribute_value) {\\n              // Append the \\\"Power (kVA)\\\" attribute value to the item_name\\n              doc.item_name =\\n                doc.item_name +\\n                \\\" \\\" +\\n                doc.attributes[lIndex].attribute_value.toString();\\n            }\\n          }\\n          // Add other specified attributes to the item_name\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"HV (kV)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"HV 1 (kV)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"HV 2 (kV)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"LV (V)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"Uk (%)\\\");\\n          //doc.item_name = fnAddAttributeToItemName(doc, \\\"P0 (W)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"HV LI (kV)\\\");\\n          //replaces all occurrences of \\\"-\\\" with \\\"/\\\" and \\\".\\\" \\n          // with \\\",\\\" here -g is flag denote global search\\n          doc.item_code = doc.item_code.replace(/-/g, \\\"/\\\").replace(/\\\\./g, \\\",\\\");\\n          // incase the HV1 or HV2 is not entered replace  /// to /0/0/\\n          doc.item_code = doc.item_code.replace(/\\\\/\\\\/\\\\//g, \\\"/0/0/\\\");\\n          // replaces all whitespace characters (\\\\s) with '0'\\n  \\n          //>>ISS-2024-00013\\n          // replaces two or more consecutive slashes with \\\"/0/\\\"\\n          //If the HV Value is not provided, and \\n          //either the LPA or LWA value is missing\\n          //should display 0 instead of an empty space.\\n          doc.item_code = doc.item_code\\n            .replace(/\\\\s/g, \\\"0\\\")\\n            .replace(/\\\\/{2,}/g, \\\"/0/\\\");\\n          //<<ISS-2024-00013\\n          break;\\n        // >> ISS-2024-00004\\n  \\n        //<< TASK-2024-0580\\n        //<< TASK-2024-0581\\n        // Item Name for RGB and NEU group\\n        case \\\"RGB\\\":\\n        case \\\"NEU\\\":\\n          doc.item_name = doc.variant_of;\\n          // Find the index of the \\\"Power (kVA)\\\" attribute in the attributes array\\n          let lIndexvalue = doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Power (kVA)\\\"\\n          );\\n          // Check if the \\\"Power (kVA)\\\" attribute exists and has a value\\n          if (lIndexvalue >= 0) {\\n            //check if attribute value is filled\\n            if (doc.attributes[lIndexvalue].attribute_value) {\\n              // Append the \\\"Power (kVA)\\\" attribute value to the item_name\\n              doc.item_name =\\n                doc.item_name +\\n                \\\" \\\" +\\n                doc.attributes[lIndexvalue].attribute_value.toString();\\n            }\\n          }\\n          // Add other specified attributes to the item_name\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"HV (kV)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"HV 1 (kV)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"HV 2 (kV)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"LV (V)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"Uk (%)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"Power LV 1 (KV)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"LV 1 (V)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"Uk LV 1 (%)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"Power LV 2 (KV)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"LV 2 (V)\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"Uk LV 2 (%)\\\");\\n          //replaces all occurrences of \\\"-\\\" with \\\"/\\\" and \\\".\\\" \\n          //with \\\",\\\" here -g is flag denote global search\\n          doc.item_code = doc.item_code.replace(/-/g, \\\"/\\\").replace(/\\\\./g, \\\",\\\");\\n          // incase the HV1 or HV2 is not entered replace  /// to /0/0/\\n          doc.item_code = doc.item_code.replace(/\\\\/\\\\/\\\\//g, \\\"/0/0/\\\");\\n          // replaces all whitespace characters (\\\\s) with '0'\\n          // replaces two or more consecutive slashes with \\\"/0/\\\"\\n          //If the HV Value is not provided, and \\n          // either the LPA or LWA value is missing\\n          //should display 0 instead of an empty space.\\n          doc.item_code = doc.item_code\\n            .replace(/\\\\s/g, \\\"0\\\")\\n            .replace(/\\\\/{2,}/g, \\\"/0/\\\");\\n          break;\\n        //>> TASK-2024-0581\\n        //>> TASK-2024-0580\\n  \\n        case \\\"Enclosure\\\":\\n          // Add attributes to the item name\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"Enclosure IP Rating\\\");\\n          doc.item_name = fnAddAttributeToItemName(doc, \\\"Mounting Type\\\");\\n  \\n          // Replace hyphens with slashes in the item code\\n          doc.item_code = doc.item_code.replace(/-/g, \\\"/\\\");\\n  \\n          // Replace hyphens with slashes in the item name\\n          //doc.item_name = doc.item_code.replace(/-/g, '/');\\n          //Store the replaced item code to the item name\\n          doc.item_name = doc.item_code;\\n          // Replace first slash with space in the item name\\n          doc.item_name = doc.item_name.replace(\\\"/\\\", \\\" \\\");\\n          // << ISS-2024-00004\\n          break;\\n  \\n        default:\\n      } //Switch\\n    } //if(frm.is_new()) {\\n  };\\n  frappe.ui.form.on(\\\"Item\\\", {\\n    refresh(frm) {},\\n  });\\n  \",\n \"view\": \"Form\"\n}","_user_tags":null,"_comments":null,"_assign":null,"_liked_by":null}