{"name":"c9490bc834","creation":"2024-11-20 08:03:19.779228","modified":"2024-11-20 08:03:19.779228","modified_by":"deploymentmaster@lmnas.com","owner":"deploymentmaster@lmnas.com","docstatus":0,"idx":0,"deleted_name":"Item Technical Name Beta","deleted_doctype":"Client Script","restored":0,"new_name":null,"data":"{\n \"creation\": \"2024-11-20 08:03:10.524617\",\n \"docstatus\": 0,\n \"doctype\": \"Client Script\",\n \"dt\": \"Item\",\n \"enabled\": 1,\n \"idx\": 0,\n \"modified\": \"2024-11-20 08:03:10.524617\",\n \"modified_by\": \"deploymentmaster@lmnas.com\",\n \"module\": null,\n \"name\": \"Item Technical Name Beta\",\n \"owner\": \"deploymentmaster@lmnas.com\",\n \"script\": \"//Change Reference\\n//Both HV1 and HV2. 1 and 2 as Subscript (Issue: ISS-2024-00017)\\nfrappe.ui.form.on(\\\"Item\\\", {\\n    refresh(frm) {},\\n    validate(frm) {\\n      let lItemTechnicalName;\\n      // Function to format the HV text based on attribute values\\n      function fnGetHv(iDoc) {\\n        var lHvText = \\\"\\\";\\n        // Find the index of the attribute \\\"HV (kV)\\\"\\n        let lIndex = iDoc.attributes.findIndex(\\n          (element) => element.attribute == \\\"HV (kV)\\\"\\n        );\\n        // If \\\"HV (kV)\\\" is not available, try \\\"HV 1 (kV)\\\" and \\\"HV 2 (kV)\\\"\\n        if (!iDoc.attributes[lIndex].attribute_value) {\\n          // Find the index of the attribute \\\"HV 1 (kV)\\\"\\n          lIndex = iDoc.attributes.findIndex(\\n            (element) => element.attribute == \\\"HV 1 (kV)\\\"\\n          );\\n  \\n          //>>ISS-2024-00017\\n          //Replace the HV1 as HV\\u2081\\n          lHvText =\\n            \\\"HV\\u2081 \\\" +\\n            iDoc.attributes[lIndex].attribute_value\\n              .toString()\\n              .replace(/\\\\./g, \\\",\\\") +\\n            \\\" [kV]\\\";\\n  \\n          // Find the index of the attribute \\\"HV 2 (kV)\\\"\\n          lIndex = iDoc.attributes.findIndex(\\n            (element) => element.attribute == \\\"HV 2 (kV)\\\"\\n          );\\n  \\n          //Replace the HV2 as HV\\u2082\\n          lHvText =\\n            lHvText +\\n            \\\", \\\" +\\n            \\\"HV\\u2082 \\\" +\\n            iDoc.attributes[lIndex].attribute_value\\n              .toString()\\n              .replace(/\\\\./g, \\\",\\\") +\\n            \\\" [kV]\\\";\\n          //<<ISS-2024-00017\\n        } else {\\n          // If \\\"HV (kV)\\\" is available, use it\\n          lHvText =\\n            \\\"HV \\\" +\\n            iDoc.attributes[lIndex].attribute_value\\n              .toString()\\n              .replace(/\\\\./g, \\\",\\\") +\\n            \\\" [kV]\\\";\\n        }\\n        return lHvText;\\n      }\\n      //>> TASK-2024-0582\\n      // Funtion to get LV if available or get the LV 1 and LV 2\\n      function fnGeLVwithUk(iDoc) {\\n        var lLVtext = \\\"\\\";\\n        // Find index of attribute \\\"LV (V)\\\"\\n        let lIndexvalue = iDoc.attributes.findIndex(\\n          (element) => element.attribute == \\\"LV (V)\\\"\\n        );\\n        // If \\\"LV (V)\\\" is not available, try \\\"LV 1 (V)\\\" and \\\"LV 2 (V)\\\"\\n        if (!iDoc.attributes[lIndexvalue].attribute_value) {\\n          // Find index of attribute \\\"Power LV 1 (KV)\\\"\\n          lIndexvalue = iDoc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Power LV 1 (KV)\\\"\\n          );\\n          lLVtext =\\n            \\\" Power LV\\u2081 \\\" +\\n            iDoc.attributes[lIndexvalue].attribute_value\\n              .toString()\\n              .replace(/\\\\./g, \\\",\\\") +\\n            \\\" [kV]\\\";\\n          // Find index of attribute \\\"LV 1 (V)\\\"\\n          lIndexvalue = iDoc.attributes.findIndex(\\n            (element) => element.attribute == \\\"LV 1 (V)\\\"\\n          );\\n          lLVtext +=\\n            \\\", \\\" +\\n            \\\"LV\\u2081 \\\" +\\n            iDoc.attributes[lIndexvalue].attribute_value\\n              .toString()\\n              .replace(/\\\\./g, \\\",\\\") +\\n            \\\" [V]\\\";\\n          // Find index of attribute \\\"Uk LV 1 (%)\\\"\\n          lIndexvalue = iDoc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Uk LV 1 (%)\\\"\\n          );\\n          lLVtext +=\\n            \\\", \\\" +\\n            \\\"Uk LV\\u2081 \\\" +\\n            iDoc.attributes[lIndexvalue].attribute_value\\n              .toString()\\n              .replace(/\\\\./g, \\\",\\\") +\\n            \\\" [%]\\\";\\n          // Find index of attribute \\\"Power LV 2 (KV)\\\"\\n          lIndexvalue = iDoc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Power LV 2 (KV)\\\"\\n          );\\n          lLVtext +=\\n            \\\", \\\" +\\n            \\\"Power LV\\u2082 \\\" +\\n            iDoc.attributes[lIndexvalue].attribute_value\\n              .toString()\\n              .replace(/\\\\./g, \\\",\\\") +\\n            \\\" [kV]\\\";\\n          // Find index of attribute \\\"LV 2 (V)\\\"\\n          lIndexvalue = iDoc.attributes.findIndex(\\n            (element) => element.attribute == \\\"LV 2 (V)\\\"\\n          );\\n          lLVtext +=\\n            \\\", \\\" +\\n            \\\"LV\\u2082 \\\" +\\n            iDoc.attributes[lIndexvalue].attribute_value\\n              .toString()\\n              .replace(/\\\\./g, \\\",\\\") +\\n            \\\" [V]\\\";\\n          // Find index of attribute \\\"Uk LV 2 (%)\\\"\\n          lIndexvalue = iDoc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Uk LV 2 (%)\\\"\\n          );\\n          lLVtext +=\\n            \\\", \\\" +\\n            \\\"Uk LV\\u2082 \\\" +\\n            iDoc.attributes[lIndexvalue].attribute_value\\n              .toString()\\n              .replace(/\\\\./g, \\\",\\\") +\\n            \\\" [%]\\\";\\n        } else {\\n          lLVtext =\\n            \\\" LV \\\" +\\n            iDoc.attributes[lIndexvalue].attribute_value\\n              .toString()\\n              .replace(/\\\\./g, \\\",\\\") +\\n            \\\" [V]\\\";\\n          // Find index of attribute \\\"Uk (%)\\\"\\n          lIndexvalue = iDoc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Uk (%)\\\"\\n          );\\n          lLVtext +=\\n            \\\", \\\" +\\n            \\\"Uk \\\" +\\n            iDoc.attributes[lIndexvalue].attribute_value\\n              .toString()\\n              .replace(/\\\\./g, \\\",\\\") +\\n            \\\" [%]\\\";\\n        }\\n        return lLVtext;\\n      }\\n      //<< TASK-2024-0582\\n  \\n      if (frm.is_new()) {\\n        // Check if the item is a variant and starts with \\\"DTTHZ2N\\\"\\n        if (frm.doc.variant_of && frm.doc.variant_of.startsWith(\\\"DTTHZ2N\\\")) {\\n          // Find the index of the attribute \\\"Power (kVA)\\\"\\n          let lIndex = frm.doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Power (kVA)\\\"\\n          );\\n          // Check if \\\"Power (kVA)\\\" attribute is present\\n          if (lIndex >= 0) {\\n            //check if attribute value is filled\\n            if (frm.doc.attributes[lIndex].attribute_value) {\\n              // Set the item technical name with \\\"Power (kVA)\\\" value\\n              lItemTechnicalName =\\n                frm.doc.attributes[lIndex].attribute_value.toString() + \\\" [kVA]\\\";\\n            }\\n          }\\n          //Retrieve the formatted HV values, \\n          //whether it is 'HV' or a combination of 'HV1' and 'HV2'\\n          let lHvText = fnGetHv(frm.doc);\\n          lItemTechnicalName = lItemTechnicalName + \\\", \\\" + lHvText;\\n  \\n          // Find index of attribute \\\"LV (V)\\\"\\n          lIndex = frm.doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"LV (V)\\\"\\n          );\\n          // Check if \\\"LV (V)\\\" attribute is present\\n          if (lIndex >= 0) {\\n            // Add \\\"LV (V)\\\" attribute to the item technical name\\n            lItemTechnicalName =\\n              lItemTechnicalName +\\n              \\\",\\\" +\\n              \\\" LV \\\" +\\n              frm.doc.attributes[lIndex].attribute_value.toString() +\\n              \\\" [V]\\\";\\n          }\\n  \\n          // Find index of attribute \\\"Uk (%)\\\"\\n          lIndex = frm.doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Uk (%)\\\"\\n          );\\n          // Check if \\\"Uk (%)\\\" attribute is present\\n          if (lIndex >= 0) {\\n            // Add \\\"Uk (%)\\\" attribute to the item technical name\\n            lItemTechnicalName =\\n              lItemTechnicalName +\\n              \\\",\\\" +\\n              \\\" Uk \\\" +\\n              frm.doc.attributes[lIndex].attribute_value.toString() +\\n              \\\" [%]\\\";\\n          }\\n  \\n          // Find index of attribute \\\"P0 (W)\\\"\\n          lIndex = frm.doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"P0 (W)\\\"\\n          );\\n          // Check if \\\"P0 (W)\\\" attribute is present\\n          if (lIndex >= 0) {\\n            // Add \\\"P0 (W)\\\" attribute to the item technical name\\n            lItemTechnicalName =\\n              lItemTechnicalName +\\n              \\\",\\\" +\\n              \\\" P(0) \\\" +\\n              frm.doc.attributes[lIndex].attribute_value.toString() +\\n              \\\" [W]\\\";\\n          }\\n  \\n          // Find index of attribute \\\"Pk (W)\\\"\\n          lIndex = frm.doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Pk (W)\\\"\\n          );\\n          // Check if \\\"Pk (W)\\\" attribute is present\\n          if (lIndex >= 0) {\\n            // Add \\\"Pk (W)\\\" attribute to the item technical name\\n            lItemTechnicalName =\\n              lItemTechnicalName +\\n              \\\",\\\" +\\n              \\\" P(k) \\\" +\\n              frm.doc.attributes[lIndex].attribute_value.toString() +\\n              \\\" [W]\\\";\\n          }\\n          cur_frm.set_value(\\\"item_technical_name\\\", lItemTechnicalName);\\n        }\\n        // Set the calculated value to the field \\\"item_technical_name\\\"\\n  \\n        var laItemGroups = [\\\"RGB\\\", \\\"NEU\\\"];\\n        let laTemplate = [];\\n        // Call the API to get items\\n        frappe.call({\\n          method: \\\"get_item_template\\\",\\n          args: {\\n            i_item_groups: laItemGroups,\\n          },\\n          callback: function (response) {\\n            //console.log(response)\\n            if (response.message) {\\n              // Set options for transformer_type field\\n              laTemplate = response.message.name;\\n            }\\n          },\\n        });\\n  \\n        //>> TASK-2024-0582\\n        // Item Techinacal Name for Template with item group  RGB , NEU\\n        if (laTemplate.includes(frm.doc.variant_of)) {\\n          // Find the index of the attribute \\\"Power (kVA)\\\"\\n          let lIndex = frm.doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Power (kVA)\\\"\\n          );\\n          // Check if \\\"Power (kVA)\\\" attribute is present\\n          if (lIndex >= 0) {\\n            //check if attribute value is filled\\n            if (frm.doc.attributes[lIndex].attribute_value) {\\n              // Set the item technical name with \\\"Power (kVA)\\\" value\\n              lItemTechnicalName =\\n                frm.doc.attributes[lIndex].attribute_value.toString() + \\\" [kVA]\\\";\\n            }\\n          }\\n  \\n          //Retrieve the formatted HV values, \\n          //whether it is 'HV' or a combination of 'HV1' and 'HV2'\\n          let lHvText = fnGetHv(frm.doc);\\n          lItemTechnicalName = lItemTechnicalName + \\\", \\\" + lHvText;\\n  \\n          //Retrieve the formatted LV values, \\n          //whether it is 'LV' or a combination of 'LV1' and 'LV2'\\n          let lLVtext = fnGeLVwithUk(frm.doc);\\n          lItemTechnicalName = lItemTechnicalName + \\\", \\\" + lLVtext;\\n  \\n          // Find index of attribute \\\"P0 (W)\\\"\\n          lIndex = frm.doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"P0 (W)\\\"\\n          );\\n          // Check if \\\"P0 (W)\\\" attribute is present\\n          if (lIndex >= 0) {\\n            // Add \\\"P0 (W)\\\" attribute to the item technical name\\n            lItemTechnicalName =\\n              lItemTechnicalName +\\n              \\\",\\\" +\\n              \\\" P(0) \\\" +\\n              frm.doc.attributes[lIndex].attribute_value.toString() +\\n              \\\" [W]\\\";\\n          }\\n  \\n          // Find index of attribute \\\"Pk (W)\\\"\\n          lIndex = frm.doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Pk (W)\\\"\\n          );\\n          // Check if \\\"Pk (W)\\\" attribute is present\\n          if (lIndex >= 0) {\\n            // Add \\\"Pk (W)\\\" attribute to the item technical name\\n            lItemTechnicalName =\\n              lItemTechnicalName +\\n              \\\",\\\" +\\n              \\\" P(k) \\\" +\\n              frm.doc.attributes[lIndex].attribute_value.toString() +\\n              \\\" [W]\\\";\\n          }\\n  \\n          // Find index of attribute \\\"Winding Material\\\"\\n          lIndex = frm.doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Winding Material\\\"\\n          );\\n          // Check if \\\"Winding Material\\\" attribute is present\\n          if (lIndex >= 0) {\\n            // Add \\\"Winding Material\\\" attribute to the item technical name\\n            lItemTechnicalName =\\n              lItemTechnicalName +\\n              \\\", \\\" +\\n              frm.doc.attributes[lIndex].attribute_value.toString();\\n          }\\n  \\n          // Find index of attribute \\\"Cooling\\\"\\n          lIndex = frm.doc.attributes.findIndex(\\n            (element) => element.attribute == \\\"Cooling\\\"\\n          );\\n          // Check if \\\"Cooling\\\" attribute is present\\n          if (lIndex >= 0) {\\n            // Add \\\"Cooling\\\" attribute to the item technical name\\n            lItemTechnicalName =\\n              lItemTechnicalName +\\n              \\\", \\\" +\\n              frm.doc.attributes[lIndex].attribute_value.toString();\\n          }\\n  \\n          // Set the calculated value to the field \\\"item_technical_name\\\"\\n          cur_frm.set_value(\\\"item_technical_name\\\", lItemTechnicalName);\\n        }\\n        //<< TASK-2024-0582\\n      }\\n    },\\n  });\\n  \",\n \"view\": \"Form\"\n}","_user_tags":null,"_comments":null,"_assign":null,"_liked_by":null}