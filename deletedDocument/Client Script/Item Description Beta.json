{"name":"ad05e7c4ab","creation":"2024-11-20 11:41:48.962271","modified":"2024-11-20 11:41:48.962271","modified_by":"deploymentmaster@lmnas.com","owner":"deploymentmaster@lmnas.com","docstatus":0,"idx":0,"deleted_name":"Item Description Beta","deleted_doctype":"Client Script","restored":0,"new_name":null,"data":"{\n \"creation\": \"2024-11-20 11:41:39.945265\",\n \"docstatus\": 0,\n \"doctype\": \"Client Script\",\n \"dt\": \"Item\",\n \"enabled\": 1,\n \"idx\": 0,\n \"modified\": \"2024-11-20 11:41:39.945265\",\n \"modified_by\": \"deploymentmaster@lmnas.com\",\n \"module\": null,\n \"name\": \"Item Description Beta\",\n \"owner\": \"deploymentmaster@lmnas.com\",\n \"script\": \"// Change References\\n// Formation of Enclosure Item Description:(Issue# : ISS-2024-00004)\\n// Get Item description form the Item Template to Item Creation description\\n// Item description taken from Template item to Item Creation with different Trafo Type\\n//>> ISS-2024-00004\\nfrappe.ui.form.on(\\\"Item\\\", {\\n  validate: function (frm) {\\n    frm.events.set_attributes_to_edit(frm);\\n\\n    var lItemDescription = \\\"\\\"; // Declare variables for item description\\n    var lIndex; // Declare the index variable\\n\\n    // If there is no description or the description equals to empty editor value\\n    // or the form is new\\n    if (\\n      !frm.doc.description ||\\n      frm.doc.description ==\\n        '<div class=\\\"ql-editor read-mode\\\"><p><br></p></div>' ||\\n      frm.is_new()\\n    ) {\\n      // Check if the item is a variant of another template item\\n      if (frm.doc.variant_of) {\\n        // Fetch the template item's description\\n        frappe.db.get_value(\\n          \\\"Item\\\",\\n          frm.doc.variant_of,\\n          \\\"description\\\",\\n          function (iTemplate) {\\n            if (iTemplate.description) {\\n              lItemDescription = iTemplate.description;\\n            } else {\\n              // The following are for Enclosures\\n              // Find the index of 'Power (kVA)' attribute in the attributes array\\n              lIndex = frm.doc.attributes.findIndex(\\n                (element) => element.attribute == \\\"Power (kVA)\\\"\\n              );\\n              // Add power to the Description if there is index\\n              if (lIndex >= 0) {\\n                lItemDescription +=\\n                  \\\"- \\\" +\\n                  frm.doc.attributes[lIndex].attribute_value +\\n                  \\\" [kVA], \\\";\\n              }\\n\\n              // Find the index of 'Enclosure IP Rating' attribute in the attributes array\\n              lIndex = frm.doc.attributes.findIndex(\\n                (element) => element.attribute == \\\"Enclosure IP Rating\\\"\\n              );\\n              // Add IP rating to the Description if there is index\\n              if (lIndex >= 0) {\\n                lItemDescription +=\\n                  \\\"Rating \\\" + frm.doc.attributes[lIndex].attribute_value + \\\", \\\";\\n              }\\n\\n              // Find the index of 'Mounting Type' attribute in the attributes array\\n              lIndex = frm.doc.attributes.findIndex(\\n                (element) => element.attribute == \\\"Mounting Type\\\"\\n              );\\n              // Add mounting to the Description if there is index\\n              if (lIndex >= 0) {\\n                lItemDescription += frm.doc.attributes[lIndex].attribute_value;\\n              }\\n\\n              // If no description is built, fill item description as 'Item Group specification:'\\n              if (!lItemDescription) {\\n                lItemDescription =\\n                  \\\"<p>\\\" + frm.doc.item_group + \\\" specification:\\\" + \\\"</p>\\\";\\n              }\\n            }\\n            // Set the description\\n            cur_frm.set_value(\\\"description\\\", lItemDescription);\\n          }\\n        );\\n      } else {\\n        // For non-variant items, follow the same logic\\n        lIndex = frm.doc.attributes.findIndex(\\n          (element) => element.attribute == \\\"Power (kVA)\\\"\\n        );\\n        if (lIndex >= 0) {\\n          lItemDescription +=\\n            \\\"- \\\" + frm.doc.attributes[lIndex].attribute_value + \\\" [kVA], \\\";\\n        }\\n\\n        lIndex = frm.doc.attributes.findIndex(\\n          (element) => element.attribute == \\\"Enclosure IP Rating\\\"\\n        );\\n        if (lIndex >= 0) {\\n          lItemDescription +=\\n            \\\"Rating \\\" + frm.doc.attributes[lIndex].attribute_value + \\\", \\\";\\n        }\\n\\n        lIndex = frm.doc.attributes.findIndex(\\n          (element) => element.attribute == \\\"Mounting Type\\\"\\n        );\\n        if (lIndex >= 0) {\\n          lItemDescription += frm.doc.attributes[lIndex].attribute_value;\\n        }\\n\\n        if (!lItemDescription) {\\n          lItemDescription =\\n            \\\"<p>\\\" + frm.doc.item_group + \\\" specification:\\\" + \\\"</p>\\\";\\n        }\\n\\n        cur_frm.set_value(\\\"description\\\", lItemDescription);\\n      }\\n    }\\n  },\\n\\n  set_attributes_to_edit: function (frm) {\\n    // Allow Edit of Item Variants table after validation error and before save\\n    frm.set_df_property(\\n      \\\"attributes\\\",\\n      \\\"read_only\\\",\\n      frm.is_new() || frm.doc.has_variants ? 0 : 1\\n    );\\n  },\\n});\\n// << ISS-2024-00004\\n\",\n \"view\": \"Form\"\n}","_user_tags":null,"_comments":null,"_assign":null,"_liked_by":null}