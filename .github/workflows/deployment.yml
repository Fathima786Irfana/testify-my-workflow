name: Auto-Deployment

on:
  push:
    branches:
      - pre-release
    paths-ignore:
      - '**/cypress/**'
      - '.pylintrc'
      - 'eslint.config.js'
      - 'eslint-plugin-custom-rules.js'


env:
  MERGE_COMMIT_SHA: ${{ github.sha }}

jobs:
  auto-merge-pre-to-base:
    name: Auto Merge Pre Branch to Base Branch
    if: startsWith(github.ref_name, 'pre-')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set base branch
        id: vars
        run: |
          CURRENT_BRANCH="${{ github.ref_name }}"
          BASE_BRANCH="${CURRENT_BRANCH#pre-}"  # Remove 'pre-' prefix
          echo "base_branch=$BASE_BRANCH" >> "$GITHUB_OUTPUT"
          echo "Current Branch: $CURRENT_BRANCH"
          echo "Target Base Branch: $BASE_BRANCH"

      - name: Authenticate with GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth status

      - name: Check for running workflows on base branch
        id: check_workflows
        run: |
          BASE_BRANCH=${{ steps.vars.outputs.base_branch }}
          RUNNING=$(gh run list -b "$BASE_BRANCH" --limit 10 --json status -q '.[] | select(.status == "in_progress" or .status == "queued")')
          if [[ -n "$RUNNING" ]]; then
            echo "Workflows are still running on $BASE_BRANCH. Skipping merge."
            echo "skip_merge=true" >> "$GITHUB_OUTPUT"
          else
            echo "No running workflows on $BASE_BRANCH. Proceeding with merge."
            echo "skip_merge=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Merge pre-* into target base branch
        if: steps.check_workflows.outputs.skip_merge == 'false'
        run: |
          # git config user.name "github-actions[bot]"
          # git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin

          BASE_BRANCH=${{ steps.vars.outputs.base_branch }}
          CURRENT_BRANCH=${{ github.ref_name }}

          git checkout -B "$BASE_BRANCH" "origin/$BASE_BRANCH"
          git merge "origin/$CURRENT_BRANCH" --no-ff --no-edit
          git push origin "$BASE_BRANCH"

  revert_merge:
    name: Revert Pre-Branch Commits from Merged PR
    if: needs.auto-merge-pre-to-base.outputs.skip_merge == 'true'
    runs-on: ubuntu-latest
    needs: auto-merge-pre-to-base

    env:
      GH_PAT: ${{ secrets.GH_PAT }}

    steps:
      - name: Checkout repo with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Find base commit before PR merge
        id: find_base
        run: |
          # Get the parent branch (e.g., pre-release)
          CURRENT_BRANCH="${{ github.ref_name }}"
          
          # Get the commit just before the PR merge (merge-base of HEAD and HEAD^)
          BASE_COMMIT=$(git merge-base HEAD HEAD^)
          echo "base_commit=$BASE_COMMIT" >> "$GITHUB_OUTPUT"
          echo "Base Commit Before PR Merge: $BASE_COMMIT"

      - name: Hard reset to base commit (undo PR merge)
        run: |
          git reset --hard ${{ steps.find_base.outputs.base_commit }}

      - name: Force push to pre-* branch
        run: |
          CURRENT_BRANCH="${{ github.ref_name }}"
          git push --force https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} HEAD:$CURRENT_BRANCH
