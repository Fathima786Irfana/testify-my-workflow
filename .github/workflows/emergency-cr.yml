name: ECR Deployment

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/cypress/**'
      - '.github/**'
      - '.pylintrc'
      - 'eslint.config.js'
      - 'eslint-plugin-custom-rules.js'

jobs:

  wait_for_approval:
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') &&
      (contains(github.event.head_commit.message, '(ECR)'))
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: arun-lmnas
          minimum-approvals: 1
          issue-title: "Deploying to the production"
          issue-body: "Please approve or deny the production deployment"
          
  production:
    runs-on: ubuntu-latest
    needs: wait_for_approval
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') &&
      (contains(github.event.head_commit.message, '(ECR)'))
    env:
      HOST: ${{ vars.PROD_HOST }}
      PROTOCOL: ${{ vars.PROD_PROTOCOL }}
      CLIENT_SCRIPT_END_POINT: ${{ vars.PROD_CLIENT_SCRIPT_END_POINT }}
      SERVER_SCRIPT_END_POINT: ${{ vars.PROD_SERVER_SCRIPT_END_POINT }}
      REPORT_END_POINT: ${{ vars.PROD_REPORT_END_POINT }}
      LETTER_HEAD_END_POINT: ${{ vars.PROD_LETTER_HEAD_END_POINT }}
      PRINT_FORMAT_END_POINT: ${{ vars.PROD_PRINT_FORMAT_END_POINT }}
      PERM_END_POINT: ${{ vars.PROD_PERM_END_POINT }}
      CUSTOM_FIELD_END_POINT: ${{ vars.PROD_CUSTOM_FIELD_END_POINT }}
      DOCTYPE_END_POINT: ${{ vars.PROD_DOCTYPE_END_POINT }}
      USER_PERMISSION : ${{ vars.PROD_USER_PERMISSION }}
      KEY: ${{ vars.PROD_KEY }}

    steps:
      - name: Use Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Checkout
        uses: actions/checkout@v4

      - name: Uploading the Custom DocType
        run: |
          if grep -q "custom_doctype" ci/migrate.txt; then
            echo "Allows the Custom DocType Configuration job to proceed."
            npm i
            npm run update_doctype
          else
            echo "Does not allow the Custom DocType Configuration job to proceed, skipping."
            exit 0
          fi

      - name: Upload Custom DocFields
        run: |
          if grep -q "custom_fields" ci/migrate.txt; then
            echo "Allows the DocFields Configuration job to proceed."
            npm i
            npm run update_field
          else
            echo "Does not allow the DocFields Configuration job to proceed, skipping."
            exit 0
          fi

      - name: Upload the files
        run: |
          npm i
          npm run upload

      - name: Upload Roles and Permission
        env:
          KEY: ${{ vars.PROD_ROLE_KEY }}
        run: |
          if grep -q "roles_permission" ci/migrate.txt; then
            echo "Allows the Roles and Permission Configuration job to proceed."
            npm i
            npm run upload_perm
          else
            echo "Does not allow the Roles and Permission Configuration job to proceed, skipping."
            exit 0
          fi

      - name: Upload User Permission
        run: |
          if grep -q "user_permission" ci/migrate.txt; then
            echo "Allows the User Permission Configuration job to proceed."
            npm i
            npm run update_user_permission
          else
            echo "Does not allow the User Permission Configuration job to proceed, skipping."
            exit 0
          fi

      - name: Upload Letterhead and Printformat
        run: |
          if grep -q "print_format" ci/migrate.txt; then
            echo "Allows the Letter Head and Print Format Configuration job to proceed."
            npm i
            npm run upload_letterhead_printformat
          else
            echo "Does not allow the Letter Head and Print Format Configuration job to proceed, skipping."
            exit 0
          fi

      - name: Upload Documents
        run: |
          if grep -q "documents" ci/migrate.txt; then
            echo "Allows the Documents Configuration job to proceed."
            npm i
            npm run update_document
          else
            echo "Does not allow the Documents Configuration job to proceed, skipping."
            exit 0
          fi
      
      - name: Delete Files
        run: |
          if grep -q "delete_files" ci/migrate.txt; then
            echo "Allows the Deletion of Files to proceed"
            npm i
            npm run delete_record
          else
            echo "Does not allows the Deletion of Files to proceed, skipping."
            exit 0
          fi

      - name: Update Property Setter
        run: |
          if grep -q "update_property_setter" ci/migrate.txt; then
            echo "Allows the Updation of Core Doc Fields to proceed"
            npm i
            npm run update_property_setter
          else
            echo "Does not allows the Updation of Core Doc Fields to proceed, skipping."
            exit 0
          fi